9.4 Left Join

Para comenzar debemos dejar en claro que LEFT JOIN y LEFT OUTER JOIN son exactamente lo mismo, asi que nos referiremos a la union como LEFT JOIN.

cuanod nosotros usamos LEFT JOIN, nosotros podemos obtener registros de la union de dos tablas, los registros pueden encontrarse, en la intersección de ambas, como solo la tabla A, la tabla del lado isquierdo.



			 A 				  B

	     ------------    ------------
		/////////////\  /			 \	
	   ///////////////\/			  \
	  /////////////////\			   \
	  |//////////////|//|			   |		
	  |//////////////|//|			   |		
	  |//////////////|//|			   |			  	  
	   \//////////////\/			   /
	   	\//////////////\			  /	 
	   	 \////////////  \            /
	     ------------    ------------	  

Para quedar mas claro, generearemos una nueva tabla, debido a que la libreria los usuarios pueden prestar libros, Un usuario podra prestar mas de un titulo, asi como un titulo podra ser prestado a mas de un usuario.

Asi que la relación entre ambas tablas, usuarios - libros sera de muchoa muchos.

Cuando nostros tengamos una relación de muchos a muchos es obligatorio que nosotros generemos una nueva tabla.

En este caso la tabla tendra por nombre libros-usuarios. La definición queda de la siguiente manera:

	CREATE TABLE libros_usuarios(
		libro_id INT UNSIGNED NOT NULL,
		usuario_id INT UNSIGNED NOT NULL,

		FOREIGN KEY (libro_id) REFERENCES libros(libro_id),
		FOREIGN KEY (usuario_id) REFERENCES usuarios(usuario_id),
		fecha_creacion DATETIME DEFAULT CURRENT_TIMESTAMP
	);


Esta tabla no posee una llave primaria, pero si posee dos llaves foraneas, libro_id y usuario_id. De esta forma nosotros podremos saber que libro fue prestado a que usuario. Y que usuario a prestado que libros.

Tambien tiene una columna fecha_creacion la cual nos permite saber en que fecha el libro fue prestado.

Es una definición bastante sencilla, se procede a copiar y a paras a la terminal de la base de datos.

En el archivo de sentencias.sql se agrega esta nueva tabla.

Cada vez que nosotros insertemos un registro en esta tabla vamos a disminuir en 1 el stock de los libros,

se vana a insertar un par de registros:


	INSERT INTO libros_usuarios(libro_id, usuario_id) 
	VALUES (1,1), (2,1), (3,1) 


Teniendo en cuenta que en la tabla usuarios existen dos registros , por lo que se va a registrar que Eduardo presto el titulo 1, y tambien presto el titulo 2, y el titulo 3.	

Recordando que el primer valor es el de "libro_id" y el segundo valor es "usuario_id". Ahora se va a ejecutar

	 SOURCE curso_db/sentencias.sql

Para ejecutar el archivo de sentencias.

	system clear;


Con esta nueva tabla podremos trabajar con el left join.

Para que podamos trabajar con  left join, y para ello vamos a resolver una pequeña problematica. 

Obtengamos el nombre completo de los usuarios y el id de los libros prestados. 

Para ellos e trabajara con la tabla usuarios 

	usuarios = a
	libros_usuarios = b

Si visualizamos el diagrama de Ben en esta ocacion la tabla usuarios sera la tabla a y la tabla libros_:usuarios sera la tabla b,

La sentencia quedaria de la siguiente manera. (La tabla A)

	SELECT 
		CONCAT (nombre, " ", apellidos), 
		libros_usuarios.libro_id 
	FROM usuarios LEFT JOIN libros_usuarios 
	ON usuarios.usuario_id = libros_usuarios.usuario_id;


como se observa en el diagrama de Ben, Left join tambien nos permite obtener registros en la interseccion, asi que usaremos nuevamente la subclausula ON.	

Obtenemos:

	CONCAT (nombre, " ", apellidos)		libro_id	
	Ozkar Kozlov							1
	Ozkar Kozlov							2
	Ozkar Kozlov							3
	klvst3r io 								NULL

Una vez con la unión nosotros podremos obtener el id del libro prestado.

Podemos visualizar que Ozkar Kozlov ha prestado con el id 1, 2 y 3, por suparte Klvst3r io, no ha prestado ningun libro

Los tres primeros registros, los obtenemos debido a que se encuentran en la intersección de las dos tablas, por su parte el ultimo registro lo obtenemos, por que no se encuentra en la intersección, se encuentra en la tabla de la izquierda, en la patabla A. Como se menciono anterioremente es la tabla usuarios.

Como Klvt3r io, no ha prestado ningun libro visualizamos null, en libro id, si nostros queremos obtener todos los usuarios que han prestado un libro, podemos colocar:

		SELECT 
			CONCAT (nombre, " ", apellidos), 
			libros_usuarios.libro_id 
		FROM usuarios LEFT JOIN libros_usuarios 
		ON usuarios.usuario_id = libros_usuarios.usuario_id
		WHERE libros_usuarios.libro_id IS NOT NULL;


Resultado:
 CONCAT (nombre, " ", apellidos)		libro_id	
	Ozkar Kozlov							1
	Ozkar Kozlov							2
	Ozkar Kozlov							3		


Mostrando solamente que Ozkar Kozlov ha prestado libros.

Si queremos mostrar los usuarios que no han prestado libros, colocamos:



		SELECT 
			CONCAT (nombre, " ", apellidos), 
			libros_usuarios.libro_id 
		FROM usuarios LEFT JOIN libros_usuarios 
		ON usuarios.usuario_id = libros_usuarios.usuario_id
		WHERE libros_usuarios.libro_id IS NULL;


Recordemos que el LEFT JOIN nos permitira obntener registros de la intersección de ambas tablas, tanto como de la tabla A, La tabla a siempre sera nuestra tabla principal, la cual hayamos colocado en el FROM.
